//Time Complexity : O(n) 
//Space Complexity : O(n) 
// Did this code successfully run on Leetcode : Yes


class Solution {
    public boolean isSymmetric(TreeNode root) 
    {
        return recurr(root.left, root.right);
    }
    
    public boolean recurr(TreeNode left, TreeNode right)
    {
        if(left == null && right == null)
        {
            return true;
        }
        
        if(left == null || right == null || left.val!=right.val)
        {
            return false;
        }
        boolean b1 = recurr(left.left, right.right);
        if(b1 == false)
        {
            return false;///These minor optimizxations are imp
        }
        
        
        return b1 && recurr(left.right, right.left);
    }
}