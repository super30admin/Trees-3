Time complexity: O(Max Depth)
Time complexity: O(1)
Did this code successfully submitted on leetcode: Yes

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public boolean isSymmetric(TreeNode root) {
        return check(root,root);
    }
    
    private boolean check(TreeNode l, TreeNode r){
        
        //base
        if(l==null && r==null)
            return true;
        
        if(l==null || r==null)
            return false;
        
        // if(l.left.val != r.right.val)
        //     return false;
        
        //recurssion
        return (l.val == r.val) && check(l.left,r.right) && check(l.right,r.left);  
    }
}
