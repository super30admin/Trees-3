# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def isSymmetric(self, root: Optional[TreeNode]) -> bool:
        def helper(right, left): 
            if not right and not left:
                return True 
            elif not right or not left: 
                return False 
            ### do not return true if right == left 
            elif right.val != left.val:
                return False
            return helper(left.left, right.right) and helper(left.right, right.left)
        
        # make sure to check for this case in the scenario a empty node is passed as input
        if not root:
            return True
            
        return helper(root.left, root.right)
    
# Time Complexity: O(n)
# Space Complexity: O(n)
# Successfully implemented on Letcode
