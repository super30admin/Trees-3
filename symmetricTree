/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    //101. Symmetric Tree
    //Time Complexity is O(n)
    //Space Complexity is O(h) where h is the height of the tree
    boolean isValid;
    public boolean isSymmetric(TreeNode root) {
        if(root == null)
            return true;
        
        isValid = true;
        
        helper(root.left,root.right);
        return isValid;
            
    }
    
    private void helper(TreeNode left,TreeNode right){
        
        if(left == null && right == null)
            return;
        
        if(left==null || right==null || left.val!=right.val){
             isValid = false;
              return;
        }
           
        
        helper(left.left,right.right);
        helper(left.right,right.left);
    }
}