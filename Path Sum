/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    
    List<List<Integer>> list = new ArrayList<>();
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        
        
        List<Integer> temp = new ArrayList<>();
        //Egde case
        if(root == null)
        {
            return list;
        }
        
        TreeTraversal(root,0,temp,sum);
        return list;
    }        
    private void TreeTraversal(TreeNode root, int currSum, List<Integer> ar, int sum )
        {
            //Base case
            
            if(root==null)
            {
                return;
            }
            
             currSum += root.val;
             ar.add(root.val);
            
             if(root.left==null && root.right==null)
             {
                 if(currSum == sum)
                 {
                     list.add(ar);
                 }
             }
            
        
           TreeTraversal(root.left,currSum,new ArrayList<>(ar),sum);
           TreeTraversal(root.right,currSum,new ArrayList<> (ar),sum);
            
        }  
        
        
}
