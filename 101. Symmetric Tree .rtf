{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;\red25\green25\blue25;}
{\*\expandedcolortbl;;\cssrgb\c12941\c12941\c12941;}
\margl1440\margr1440\vieww28600\viewh15280\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs32 \cf2 \expnd0\expndtw0\kerning0
# Definition for a binary tree node.\
# class TreeNode:\
#     def __init__(self, val=0, left=None, right=None):\
#         self.val = val\
#         self.left = left\
#         self.right = right\
class Solution:\
    def isSymmetric(self, root: Optional[TreeNode]) -> bool:\
        if not root:\
            return True\
        \
        def helper(nodel, noder):\
            \
            if not nodel and not noder:\
                return True\
            \
            if not nodel or not noder:\
                return False\
            \
            return ((nodel.val == noder.val) and (helper(nodel.left, noder.right) and helper(nodel.right, noder.left)))\
        \
        return helper(root.left, root.right)\
                \
            \
            \
            \
        }