/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
   
    void magic(TreeNode* root, int sum ,int targetSum, vector<int>& path, vector<vector<int>>& ans){
        if(root==NULL){
            return;
        }
        
        path.push_back(root->val);
        sum = sum + root->val;
      
        if(root->left == NULL && root->right == NULL ){
            if(sum == targetSum){
            ans.push_back(path);
            }
        }
        magic(root->left, sum, targetSum, path,ans);
        
        magic(root->right, sum, targetSum, path, ans);
        path.pop_back();
        
    }
    
    
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
    if(root == NULL){
        return { };
    }    
        vector<int> path;
         vector<vector<int>> ans;
    
        magic(root, 0, targetSum, path,ans);
        
        return ans;
        
    }
};
