/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    int target;
    List<List<Integer>> targetPaths;
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        
        target = targetSum;
        targetPaths = new ArrayList<>();
        
        if(root == null)
            return targetPaths;
        
        
        
        helper(root,new ArrayList(),0);
        return targetPaths;
    }
    
    private void helper(TreeNode node,List<Integer> path,int currentSum){
        
        //base
        if(node == null)
            return;
        
        path.add(node.val);
        currentSum+=node.val;
        helper(node.left,path,currentSum);
        
        if(node.left == null && node.right == null){
            if(currentSum == target)
                targetPaths.add(new ArrayList<>(path));
        }
        helper(node.right,path,currentSum);
        path.remove(path.size()-1);
    }
}